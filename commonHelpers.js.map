{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-time.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputEl = document.querySelector('input');\nconst btnEl = document.querySelector('.btn');\nconst timer = document.querySelector('.timer');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate < new Date()) {\n      return iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n    } else {\n      userSelectedDate = selectedDate;\n      btnEl.disabled = false;\n    }\n  },\n};\n\nlet userSelectedDate = null;\nlet timerInterval = null;\nbtnEl.disabled = true;\n\nbtnEl.addEventListener('click', startTimer);\n\nfunction startTimer() {\n  btnEl.disabled = true;\n  inputEl.disabled = true;\n\n  if (userSelectedDate) {\n    updateMarkup(userSelectedDate);\n  }\n\n  timerInterval = setInterval(updateMarkup, 1000);\n}\n\nfunction updateMarkup() {\n  const currentData = Date.now();\n  const diff = userSelectedDate - currentData;\n  const { days, hours, minutes, seconds } = convertMs(diff);\n\n  if (diff <= 1000) {\n    clearInterval(timerInterval);\n    inputEl.disabled = false;\n  }\n\n  timer.querySelector('[data-days]').textContent = addZero(days);\n  timer.querySelector('[data-hours]').textContent = addZero(hours);\n  timer.querySelector('[data-minutes]').textContent = addZero(minutes);\n  timer.querySelector('[data-seconds]').textContent = addZero(seconds);\n}\n\nfunction addZero(e) {\n  return String(e).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nflatpickr('#datetime-picker', options);\n"],"names":["inputEl","btnEl","timer","options","selectedDates","selectedDate","iziToast","userSelectedDate","timerInterval","startTimer","updateMarkup","currentData","diff","days","hours","minutes","seconds","convertMs","addZero","ms","flatpickr"],"mappings":"2GAKA,MAAMA,EAAU,SAAS,cAAc,OAAO,EACxCC,EAAQ,SAAS,cAAc,MAAM,EACrCC,EAAQ,SAAS,cAAc,QAAQ,EAEvCC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EACpC,GAAIC,EAAe,IAAI,KACrB,OAAOC,EAAS,MAAM,CACpB,MAAO,QACP,QAAS,oCACjB,CAAO,EAEDC,EAAmBF,EACnBJ,EAAM,SAAW,EAEpB,CACH,EAEA,IAAIM,EAAmB,KACnBC,EAAgB,KACpBP,EAAM,SAAW,GAEjBA,EAAM,iBAAiB,QAASQ,CAAU,EAE1C,SAASA,GAAa,CACpBR,EAAM,SAAW,GACjBD,EAAQ,SAAW,GAEfO,GACFG,EAA6B,EAG/BF,EAAgB,YAAYE,EAAc,GAAI,CAChD,CAEA,SAASA,GAAe,CACtB,MAAMC,EAAc,KAAK,MACnBC,EAAOL,EAAmBI,EAC1B,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EAEpDA,GAAQ,MACV,cAAcJ,CAAa,EAC3BR,EAAQ,SAAW,IAGrBE,EAAM,cAAc,aAAa,EAAE,YAAcgB,EAAQL,CAAI,EAC7DX,EAAM,cAAc,cAAc,EAAE,YAAcgB,EAAQJ,CAAK,EAC/DZ,EAAM,cAAc,gBAAgB,EAAE,YAAcgB,EAAQH,CAAO,EACnEb,EAAM,cAAc,gBAAgB,EAAE,YAAcgB,EAAQF,CAAO,CACrE,CAEA,SAASE,EAAQ,EAAG,CAClB,OAAO,OAAO,CAAC,EAAE,SAAS,EAAG,GAAG,CAClC,CAEA,SAASD,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAI,EAAU,mBAAoBjB,CAAO"}